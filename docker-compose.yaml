services: 
  # --- Databases & Caches ---
  mongodb:
    image: mongo:latest
    container_name: mongodb_dev
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
       MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
       MONGO_INITDB_DATABASE: allergy_app_dev
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis_dev
    ports:
      - "6379:6379" 
    volumes:
      - redis-data:/data 
    networks:
      - app-network
    restart: unless-stopped

  neo4j:
    image: neo4j:latest
    container_name: neo4j_dev
    ports:
      - "7474:7474" 
      - "7687:7687" 
    volumes:
      - neo4j-data:/data
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD} 
      # NEO4J_PLUGINS: '["graph-data-science"]'
    networks:
      - app-network
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_dev
    ports:
      - "6333:6333" 
      - "6334:6334" 
    volumes:
      - qdrant-data:/qdrant/storage 
      # - ./qdrant/config.yaml:/qdrant/config/production.yaml
    # command: ["./qdrant", "--config-path", "/qdrant/config/production.yaml"] # If using custom config
    networks:
      - app-network
    restart: unless-stopped

  # --- Message Queue ---
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq_dev
    ports:
      - "5672:5672" 
      - "15672:15672" 
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    networks:
      - app-network
    restart: unless-stopped


# --- Volumes Definition ---
volumes:
  mongo-data:
  redis-data:
  neo4j-data:
  qdrant-data:
  rabbitmq-data:

# --- Network Definition ---
networks:
  app-network:
    driver: bridge 
